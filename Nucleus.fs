module BattleSoup.Nucleus

open System.Drawing
open BattleSoup.Util
open BattleSoup.Geometry
open BattleSoup.Drawing
open BattleSoup.Sprite
open BattleSoup.Visual
open BattleSoup.Atom

/// The border width of a nucleus atom.
let borderWidth = 1.0

/// The radius of a nucleus atom.
let radius = 10.0

/// A type of nucleus atom, a large active atom that can move other atoms in a certain distance within it.
type NucleusType (level : int) =
    inherit AtomType (radius, 90.0, borderWidth)
    let drawBody (g : Graphics) =
        let highlight, body = Color (0.6, 0.6, 0.6), Color (0.2, 0.2, 0.2)
        let highlight, body = systemColor highlight, systemColor body
        let radius = float32 radius
        let diameter = radius * 2.0f
        let borderWidth = float32 borderWidth
        use p = new Pen (highlight, float32 borderWidth)
        use b = new SolidBrush (body)
        g.FillEllipse (b, -radius, -radius, diameter, diameter)
        g.DrawEllipse (p, -radius + borderWidth * 0.5f, -radius + borderWidth * 0.5f, diameter - borderWidth, diameter - borderWidth)
    let bodySource = Draw (Rectangle (-radius, -radius, radius, radius), drawBody)
    let visual = SpriteVisual bodySource

    override this.GetVisual atom =
        AtomFollowVisual (atom, visual) :> Visual
    
    /// Gets the maximum force generated by the nucleus when moving atoms.
    member this.MoveForce = 50.0 + float level * 25.0

    /// Gets the maximum radius in which the nucleus can move atoms.
    member this.MoveRadius = 100.0 + sqrt (float level) * 25.0